<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>player_sprite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>self</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//player variables
hp = 100;
move_speed = 10;


//setting the controls of the player object ( need to reset in the option menu
//                                            * note look into saving variables*
CONTROL_LEFT  = ord('A');
CONTROL_RIGHT = ord('D');
CONTROL_UP  = ord('W');
CONTROL_DOWN = ord('S');

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//** called every frame

/*       MOVEMENT CODE     */
//note TOP LEFT is (0,0)
// right is x++, down is y++;
//hspeed == horizontal speed, vspeed == vertical speed (ALL INBUILD )
hspeed = move_speed * (keyboard_check(CONTROL_RIGHT) - keyboard_check(CONTROL_LEFT));
if(y &gt; 704){
    vspeed = move_speed * (keyboard_check(CONTROL_DOWN) - keyboard_check(CONTROL_UP));  
}
else       {
    vspeed = move_speed * (keyboard_check(CONTROL_DOWN) - 0);
}

   
//for horizontal movement
if hspeed != 0 {
    //check the next step is the space free   
    if(!place_free(x + hspeed, y)) {
        if(hspeed &gt; 0)//moving to right
            move_contact_solid(0, hspeed);//stop the movement
        if(hspeed &lt; 0)//moving to left
            move_contact_solid(180, -hspeed);//stop the movement
        hspeed = 0;
    } 
}
//for vertical movement
if vspeed != 0{
    //check the next step is the space free   
    if(!place_free(x, y + vspeed)) {
        if(vspeed &gt; 0)//moving to up
            move_contact_solid(270, vspeed);//stop the movement
        if(vspeed &lt; 0)//moving to down
            move_contact_solid(90, -vspeed);//stop the movement
        vspeed = 0;
    } 
}

//health will minus from enemy side ( GUI will display accordingly)

if(hp &lt;= 0 )
//player dies , repsawn in town
room_goto(Main_Menu);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
